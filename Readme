Ways to compile and run:  

Four machines are used: csnetlab_1, csnetlab_2, csnetlab_3, csnetlab_4  

Use 'make' command to compile.  
To run the program:  
1. Start the overlap network progress:  
	In each node, enter dictionary 'son' and run: ./son&  
	The son progresses on 4 nodes should be started in 1 minute.  
	Wait until you see 'waiting for connection from SIP process.' on all nodes.  
2. Start the network progress:
	In each node, enter dictionary 'sip' and run: ./sip&  
	Wait until you see 'waiting for connection from STCP process.' on all nodes.
3. Start the transformation layer and run the application:
	In a node, enter dictionary 'server' and run ./app_simple_app或./app_stress_app  
	In another node, enter dictionary 'client' and run ./app_simple_app or ./app_stress_app  

To end the program:  
Use 'kill -s 2 your_progress_id' to kill son progress and sip progress.  

If the port number of this program has been occupied, the program will quit.

----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- 
编译和运行的方法:

使用了四台主机: csnetlab_1, csnetlab_2, csnetlab_3, csnetlab_4

使用make命令编译. 
为了运行程序:
1. 启动重叠网络进程:
	在每个节点上, 进入son目录并运行./son&
	4个节点上的son进程应在1分钟内启动好.
	等待直到你在所有节点上看到: waiting for connection from SIP process.
2. 启动网络进程: 
	在每个节点上, 进入sip目录并运行./sip&
	等待直到你在所有节点上看到: waiting for connection from STCP process.
3. 启动传输层并运行应用程序:
	在一个节点上, 进入server目录并运行./app_simple_app或./app_stress_app
	在另一个节点上, 进入client目录并运行./app_simple_app或./app_stress_app

为了终止程序:
使用"kill -s 2 进程号"杀掉son进程和sip进程.

如果程序使用的端口号已被使用, 程序将退出.
